#include <interruptions.h>
/* 2.3 Commande asservie
 *  /!\ Programme incomplet car tops non configur√©s
 */


//outputs
  //roue gauche
#define mav_g 10
#define mar_g 9

  //roue droite
#define mav_d 3
#define mar_d 5

//interrupts
#define int_g 8
#define int_d 9

int c=0;
int d=0;

/* ---- mov ---- */
void rot_g(){
  analogWrite(mar_g,200);
  analogWrite(mav_d,200); 
}


void rot_d(){
  analogWrite(mav_g,200);
  analogWrite(mar_d,200); 
}

void av(){
  analogWrite(mav_g,200);
  analogWrite(mav_d,200);  
}


void ar(){
  analogWrite(mar_g,200);
  analogWrite(mar_d,200);  
}


void stop_mv(){
  analogWrite(mav_g,0);
  analogWrite(mar_g,0);  
  analogWrite(mav_d,0);
  analogWrite(mar_d,0);
}

void rot_45(){

  raz();    
  rot_g();
  while(c<10 && d<10){
    

    if(c<d){
      analogWrite(mar_g,255);
      analogWrite(mav_d,150);
    }
    else{
        analogWrite(mar_g,200);
        analogWrite(mav_d,200);
    }
  delay(1);
  }
  raz();
  stop_mv();
  
}



/* ---- counters ---- */
void counter_g(){
  c++;
}

void counter_d(){
  d++;

}

void raz(){
  c=0;
  d=0;
}

void setup() {
  Serial.begin(9600);
  pinMode(mav_g,OUTPUT);
  pinMode(mar_g,OUTPUT);
  pinMode(mav_d,OUTPUT);
  pinMode(mar_d,OUTPUT);

  PCattachInterrupt(A0,counter_g,CHANGE);
  PCattachInterrupt(A1,counter_d,CHANGE);
}
/*

*/

void loop() {
  
  rot_45();
  rot_45();
  delay(1000);

}


